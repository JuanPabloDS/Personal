# Generated by Django 4.1.4 on 2023-06-28 20:26

import core.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import stdimage.models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_alter_sobre_options'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contato',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.base')),
                ('titulo', models.CharField(max_length=100)),
                ('destaque', models.CharField(max_length=100)),
                ('botao', models.CharField(max_length=50)),
                ('link', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Contato',
                'verbose_name_plural': 'Contatos',
            },
            bases=('core.base',),
        ),
        migrations.CreateModel(
            name='Cores',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.base')),
                ('cor_titulo', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_titulo_dois', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_fundo_pagina', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_menu', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_paragrafo', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_sublinhado_titulo', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_box', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_sobre', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_back_text', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_sobre_background', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_sobre_h1', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_details_background', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_details_titulo', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_details_p', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_price_background', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_price_h1', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_price_p', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_price_money', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_price_box', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_price_value', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_price_span', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_price_pg', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_imagem_background', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_imagem_h1', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_question_background', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_question_h1', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_question_p', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_question_box', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_question_span', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_contact_background', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_contact_h1', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_contact_p', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_contact_box', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
                ('cor_contact_span', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Insira uma cor válida no formato hexadecimal, começando com #.', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
            ],
            options={
                'verbose_name': 'Cor',
                'verbose_name_plural': 'Cores',
            },
            bases=('core.base',),
        ),
        migrations.CreateModel(
            name='Detalhes',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.base')),
                ('titulo', models.CharField(max_length=100)),
                ('iamgem', stdimage.models.StdImageField(force_min_size=False, upload_to=core.models.get_file_path, variations={}, verbose_name='detalhes')),
                ('texto1', models.TextField()),
                ('texto2', models.TextField()),
            ],
            options={
                'verbose_name': 'Detalhe',
                'verbose_name_plural': 'Detalhes',
            },
            bases=('core.base',),
        ),
        migrations.CreateModel(
            name='Duvidas',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.base')),
                ('titulo', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Duvida Titulo',
                'verbose_name_plural': 'Duvidas Titulo',
            },
            bases=('core.base',),
        ),
        migrations.CreateModel(
            name='DuvidasRespostas',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.base')),
                ('titulo', models.CharField(max_length=100)),
                ('resposta', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Duvida e resposta',
                'verbose_name_plural': 'Duvidas e respostas',
            },
            bases=('core.base',),
        ),
        migrations.CreateModel(
            name='Imagem',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.base')),
                ('titulo', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Imagem Titulo',
                'verbose_name_plural': 'Imagem Titulo',
            },
            bases=('core.base',),
        ),
        migrations.CreateModel(
            name='ImagensLista',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.base')),
                ('iamgem', stdimage.models.StdImageField(force_min_size=False, upload_to=core.models.get_file_path, variations={}, verbose_name='imagem')),
            ],
            options={
                'verbose_name': 'Imagem',
                'verbose_name_plural': 'Imagens',
            },
            bases=('core.base',),
        ),
        migrations.CreateModel(
            name='Precos',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.base')),
                ('titulo', models.CharField(max_length=100)),
                ('aviso', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Preço',
                'verbose_name_plural': 'Preços',
            },
            bases=('core.base',),
        ),
        migrations.CreateModel(
            name='PrecosPlano1',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.base')),
                ('titulo', models.CharField(max_length=100)),
                ('dias', models.CharField(max_length=100)),
                ('preco', models.DecimalField(decimal_places=2, max_digits=8)),
            ],
            options={
                'verbose_name': 'Preço Plano 1',
                'verbose_name_plural': 'Preços Plano 1',
            },
            bases=('core.base',),
        ),
        migrations.CreateModel(
            name='PrecosPlano1Dados',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.base')),
                ('destaque', models.CharField(max_length=100)),
                ('texto', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Texto nos preço do Plano 1',
                'verbose_name_plural': 'Texto nos preço do Plano 1',
            },
            bases=('core.base',),
        ),
        migrations.CreateModel(
            name='PrecosPlano2',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.base')),
                ('titulo', models.CharField(max_length=100)),
                ('dias', models.CharField(max_length=100)),
                ('preco', models.DecimalField(decimal_places=2, max_digits=8)),
            ],
            options={
                'verbose_name': 'Texto nos preço do Plano 2',
                'verbose_name_plural': 'Texto nos preço do Plano 2',
            },
            bases=('core.base',),
        ),
        migrations.CreateModel(
            name='PrecosPlano2Dados',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.base')),
                ('destaque', models.CharField(max_length=100)),
                ('texto', models.CharField(max_length=100)),
            ],
            bases=('core.base',),
        ),
        migrations.CreateModel(
            name='SobreDados',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.base')),
                ('titulo', models.CharField(max_length=100)),
                ('textos', models.TextField()),
            ],
            options={
                'verbose_name': 'Sobre texto',
                'verbose_name_plural': 'Sobre textos',
            },
            bases=('core.base',),
        ),
        migrations.RemoveField(
            model_name='sobre',
            name='textos',
        ),
        migrations.AlterField(
            model_name='apresentacao',
            name='iamgem_fundo',
            field=stdimage.models.StdImageField(force_min_size=False, upload_to=core.models.get_file_path, variations={}, verbose_name='fundo'),
        ),
    ]
